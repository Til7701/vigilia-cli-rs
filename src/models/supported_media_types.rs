/*
 * Vigilia
 *
 * API for the Vigilia Service
 *
 * The version of the OpenAPI document: 1.1.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct SupportedMediaTypes {
    #[serde(rename = "document")]
    pub document: Vec<String>,
    #[serde(rename = "image")]
    pub image: Vec<String>,
    #[serde(rename = "video")]
    pub video: Vec<String>,
    #[serde(rename = "audio")]
    pub audio: Vec<String>,
}

impl SupportedMediaTypes {
    pub fn new(document: Vec<String>, image: Vec<String>, video: Vec<String>, audio: Vec<String>) -> SupportedMediaTypes {
        SupportedMediaTypes {
            document,
            image,
            video,
            audio,
        }
    }
}

